{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACWC,KAAKC,SAAW,IAGpCJ,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAChBA,E,IA9CQO,SAASC,cAAc,SAI/BC,iBAAiB,UAGxB,SAAkBC,GAChBA,EAAEC,iBAEF,IAA6DC,EAAfF,EAAEG,cAAxCC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE7BC,EAAaC,OAAOJ,EAAMK,OACxBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAMlC,IAJAG,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEPG,EAAI,EAAGA,GAAKH,EAAaG,GAAK,EACjC3B,EAAc2B,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACnBuB,QAAQC,IAAIzB,GACZH,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE5D+B,OAAM,SAAAJ,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACpBJ,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAG5DkB,GAA0BG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n//const delayInputEl = document.querySelector(\"input[name=delay]\"); - доступ до елемента через Нейм\n\n\nformEl.addEventListener('submit', onSubmit);\n\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const { elements: { delay, step, amount } } = e.currentTarget;\n\n  let delayInput = Number(delay.value);\n  const stepInput = Number(step.value);\n  const amountInput = Number(amount.value);\n\n  console.log(delayInput);\n  console.log(stepInput);\n  console.log(amountInput);\n\n  for (i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n      console.log(position);\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    delayInput = delayInput + stepInput;\n  };\n\n  //e.currentTarget.reset();\n};\n \n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay })\n      }\n    reject({ position, delay })\n    }, delay)\n  });\n};\n\n\n \n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayInput","Number","value","stepInput","amountInput","console","log","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.34cd8663.js.map"}